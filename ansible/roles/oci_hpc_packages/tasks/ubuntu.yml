- name: OCI HPC packages for Ubuntu
  when:
    - ansible_distribution == 'Ubuntu'
  block:

    - name: Ensure ifupdown is present
      ansible.builtin.apt:
        name: ifupdown
        lock_timeout: 300

    - name: Install wpa_supplicant
      ansible.builtin.apt:
        name: wpasupplicant
        lock_timeout: 300
      when: "'use_plugins' in options"

    - name: Download oci-cn-auth package on control
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ hpc_artifacts_download }}oci-cn-auth_{{ oci_cn_auth_version }}-compute_all.deb"
        dest: "/tmp/oci-cn-auth_{{ oci_cn_auth_version }}-compute_all.deb"
        mode: "0644"
        validate_certs: no
      when: "'use_plugins' not in options"

    - name: Copy oci-cn-auth package to builder VM
      ansible.builtin.copy:
        src: "/tmp/oci-cn-auth_{{ oci_cn_auth_version }}-compute_all.deb"
        dest: "/tmp/oci-cn-auth_{{ oci_cn_auth_version }}-compute_all.deb"
      when: "'use_plugins' not in options"

    - name: Install oci-cn-auth (HPC)
      ansible.builtin.apt:
        deb: "/tmp/oci-cn-auth_{{ oci_cn_auth_version }}-compute_all.deb"
        lock_timeout: 300
      when: "'use_plugins' not in options"

    - name: Stop oci-cn-auth renew timer
      ansible.builtin.systemd:
        name: oci-cn-auth-renew.timer
        state: stopped
        enabled: true
      when: "'use_plugins' not in options"

    - name: Define HPC legacy package filenames
      vars:
        hpc_legacy_packages:
          - "oci-hpc-mlx-configure_{{ oci_hpc_mlx_configure_version }}-compute_all.deb"
          - "oci-hpc-rdma-configure_{{ oci_hpc_rdma_configure_version }}-compute_all.deb"
          - "oci-hpc-dapl-configure_{{ oci_hpc_dapl_configure_version }}-compute_all.deb"
      set_fact:
        hpc_legacy_packages: "{{ hpc_legacy_packages }}"
      when: "'use_plugins' not in options"

    - name: Download OCI HPC legacy packages on control
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ hpc_artifacts_download }}{{ item }}"
        dest: "/tmp/{{ item }}"
        mode: "0644"
        validate_certs: no
      loop: "{{ hpc_legacy_packages }}"
      when: "'use_plugins' not in options"

    - name: Copy OCI HPC legacy packages to builder VM
      ansible.builtin.copy:
        src: "/tmp/{{ item }}"
        dest: "/tmp/{{ item }}"
        mode: "0644"
      loop: "{{ hpc_legacy_packages }}"
      when: "'use_plugins' not in options"

    - name: Install OCI HPC legacy packages (HPC)
      ansible.builtin.apt:
        deb: "{{ hpc_legacy_packages | map('regex_replace','^(.*)$','/tmp/\\1') | list }}"
        lock_timeout: 300
      when: "'use_plugins' not in options"

     # oci-hpc-network-device-names installation via download–copy–install
    - name: Download oci-hpc-network-device-names package on control
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ hpc_artifacts_download }}oci-hpc-network-device-names-{{ oci_hpc_network_device_names_version }}.{{ ansible_architecture }}.deb"
        dest: "/tmp/oci-hpc-network-device-names-{{ oci_hpc_network_device_names_version }}.{{ ansible_architecture }}.deb"
        mode: "0644"
        validate_certs: no
      when: "(oci_hpc_network_device_names_version | split('.') | first | int) >= 1"

    - name: Copy oci-hpc-network-device-names package to builder VM
      ansible.builtin.copy:
        src: "/tmp/oci-hpc-network-device-names-{{ oci_hpc_network_device_names_version }}.{{ ansible_architecture }}.deb"
        dest: "/tmp/oci-hpc-network-device-names-{{ oci_hpc_network_device_names_version }}.{{ ansible_architecture }}.deb"
      when: "(oci_hpc_network_device_names_version | split('.') | first | int) >= 1"

    - name: Install oci-hpc-network-device-names (HPC)
      ansible.builtin.apt:
        deb: "/tmp/oci-hpc-network-device-names-{{ oci_hpc_network_device_names_version }}.{{ ansible_architecture }}.deb"
        lock_timeout: 300
      when: "(oci_hpc_network_device_names_version | split('.') | first | int) >= 1"

    - name: Download oci-hpc-nvidia-gpu-configure package on control
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ hpc_artifacts_download }}oci-hpc-nvidia-gpu-configure_{{ oci_hpc_nvidia_gpu_configure_version }}-compute_all.deb"
        dest: "/tmp/oci-hpc-nvidia-gpu-configure_{{ oci_hpc_nvidia_gpu_configure_version }}-compute_all.deb"
        mode: "0644"
        validate_certs: no
      when: "'nvidia' in options"

    - name: Copy oci-hpc-nvidia-gpu-configure package to builder VM
      ansible.builtin.copy:
        src: "/tmp/oci-hpc-nvidia-gpu-configure_{{ oci_hpc_nvidia_gpu_configure_version }}-compute_all.deb"
        dest: "/tmp/oci-hpc-nvidia-gpu-configure_{{ oci_hpc_nvidia_gpu_configure_version }}-compute_all.deb"
      when: "'nvidia' in options"

    - name: Install oci-hpc-nvidia-gpu-configure (HPC)
      ansible.builtin.apt:
        deb: "/tmp/oci-hpc-nvidia-gpu-configure_{{ oci_hpc_nvidia_gpu_configure_version }}-compute_all.deb"
        lock_timeout: 300
      when: "'nvidia' in options"
