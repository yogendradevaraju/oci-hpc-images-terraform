---
- name: Install OpenMPI
  block:
    - name: Download OpenMPI tarball on control
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "https://download.open-mpi.org/release/open-mpi/v{{ openmpi_release }}/openmpi-{{ openmpi_version }}.tar.gz"
        dest: "/tmp/openmpi-{{ openmpi_version }}.tar.gz"
        validate_certs: no

    - name: Copy OpenMPI tarball to builder VM
      ansible.builtin.copy:
        src: "/tmp/openmpi-{{ openmpi_version }}.tar.gz"
        dest: "/tmp/openmpi-{{ openmpi_version }}.tar.gz"

    - name: Unpack OpenMPI on builder VM
      ansible.builtin.unarchive:
        src: "/tmp/openmpi-{{ openmpi_version }}.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: Configure and build OpenMPI
      ansible.builtin.shell: >
        ./configure --prefix=/opt/openmpi-{{ openmpi_version }}
        --with-ucx=/opt/{{ mellanox_hpcx_package }}/ucx/
        --with-hcoll=/opt/{{ mellanox_hpcx_package }}/hcoll
        --enable-mpirun-prefix-by-default
        --with-platform=contrib/platform/mellanox/optimized && make -j && make install
      args:
        chdir: "/tmp/openmpi-{{ openmpi_version }}"
        creates: "/opt/openmpi-{{ openmpi_version }}"
        executable: /bin/bash

    - name: Ensure modulefile directory exists
      ansible.builtin.file:
        path: "/etc/modulefiles/mpi/openmpi/"
        state: directory
        recurse: true

    - name: Install OpenMPI module file
      ansible.builtin.template:
        src: templates/module.j2
        dest: "/etc/modulefiles/mpi/openmpi/{{ openmpi_version }}-gcc"
        owner: root
        group: root
        mode: '0644'

    - name: Install OpenMPI shell files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ openmpi_path }}/{{ item.dest }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { src: "templates/mpivars.sh.j2", dest: "mpivars.sh" }
        - { src: "templates/mpivars.csh.j2", dest: "mpivars.csh" }
